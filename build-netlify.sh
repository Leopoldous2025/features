#!/bin/bash
set -e

echo "🔧 Starting comprehensive Netlify build process..."

# Ensure we're in the right directory
cd "$(dirname "$0")"

echo "📦 Installing dependencies..."
npm ci

echo "🗄️ Generating Prisma client..."
npx prisma generate

echo "⚙️ Preparing Nuxt (generating TypeScript configs)..."
npx nuxt prepare

# Ensure .nuxt directory exists
mkdir -p .nuxt

# Create the missing tsconfig.app.json if it doesn't exist
if [ ! -f ".nuxt/tsconfig.app.json" ]; then
    echo "📝 Creating missing tsconfig.app.json..."
    cat > .nuxt/tsconfig.app.json << 'EOF'
{
  "compilerOptions": {
    "forceConsistentCasingInFileNames": true,
    "strict": false,
    "noEmit": true,
    "target": "ES2022",
    "module": "ESNext",
    "moduleResolution": "bundler",
    "allowJs": true,
    "resolveJsonModule": true,
    "jsx": "preserve",
    "allowSyntheticDefaultImports": true,
    "jsxFactory": "h",
    "jsxFragmentFactory": "Fragment",
    "paths": {
      "#app": ["../node_modules/nuxt/dist/app"],
      "#app/*": ["../node_modules/nuxt/dist/app/*"],
      "~/*": ["../*"],
      "@/*": ["../*"],
      "~~/*": ["../*"],
      "@@/*": ["../*"]
    },
    "lib": ["ESNext", "ESNext.AsyncIterable", "DOM"],
    "esModuleInterop": true,
    "skipLibCheck": true,
    "isolatedModules": true,
    "verbatimModuleSyntax": true,
    "types": ["node"]
  },
  "include": [
    "../**/*",
    "../.nuxt/nuxt.d.ts"
  ],
  "exclude": [
    "../node_modules",
    "../.nuxt/dist"
  ]
}
EOF
fi

# Create nuxt.d.ts if it doesn't exist
if [ ! -f ".nuxt/nuxt.d.ts" ]; then
    echo "📝 Creating missing nuxt.d.ts..."
    cat > .nuxt/nuxt.d.ts << 'EOF'
// Generated by nuxt/kit
export {}
declare global {}
EOF
fi

echo "🚀 Building Nuxt application..."
npx nuxt build

echo "✅ Build completed successfully!" 